app.post('/login',(req, res) => {
    Users.findOne({ username: req.body.username, password: req.body.password }, (error, user) => {
        if (error) {
            res.writeHead(500, {
                'Content-Type': 'text/plain'
            })
            res.end("Error Occured");
        }
        if (user) {
            res.cookie('cookie', user.username, { maxAge: 900000, httpOnly: false, path: '/' });
            req.session.user = user;
            res.writeHead(200, {
                'Content-Type': 'text/plain'
            })
            res.end();
        }
        else {
            res.writeHead(401, {
                'Content-Type': 'text/plain'
            })
            res.end("Invalid Credentials");
        }
    });    
});

app.post('/create', (req, res) => {
    var newbook = new Books({
        BookID: req.body.BookID,
        Title: req.body.Title,
        Author: req.body.Author
    });

    Books.findOne({ BookID: req.body.BookID }, (error, book) => {
        if (error) {
            res.writeHead(500, {
                'Content-Type': 'text/plain'
            })
            res.end();
        }
        if (book) {
            res.writeHead(400, {
                'Content-Type': 'text/plain'
            })
            res.end("Book ID already exists");
        }
        else {
            newbook.save((error, data) => {
                if (error) {
                    res.writeHead(500, {
                        'Content-Type': 'text/plain'
                    })
                    res.end();
                }
                else {
                    res.writeHead(200, {
                        'Content-Type': 'text/plain'
                    })
                    res.end();
                }
            });
        }
    });
});

app.post('/delete', (req, res) => {
    Books.deleteOne({ BookID: req.body.BookID }, (error, result) => {
        if (error) {
            res.writeHead(500, {
                'Content-Type': 'text/plain'
            })
            res.end();
        }
        if (result.n == 0) {
            res.writeHead(400, {
                'Content-Type': 'text/plain'
            })
            res.end("Book ID does not exists");
        }
        else {
            res.writeHead(200, {
                'Content-Type': 'text/plain'
            })
            res.end();
        }
    });
});

//Route to get All Books when user visits the Home Page
app.get('/home', (req, res) => {
    Books.find({}, (error, result) => {
        if (error) {
            res.writeHead(500, {
                'Content-Type': 'text/plain'
            })
            res.end();
        }
        else {
            res.writeHead(200, {
                'Content-Type': 'application/json'
            });
            res.end(JSON.stringify(result));
        }
    });
});
