[2020-03-31 17:28:05,321] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-03-31 17:28:05,406] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-03-31 17:28:05,407] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-03-31 17:28:05,413] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-03-31 17:28:05,477] INFO [Controller id=0] Epoch incremented to 1 (kafka.controller.KafkaController)
[2020-03-31 17:28:05,478] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-03-31 17:28:05,488] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-03-31 17:28:05,495] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-03-31 17:28:05,502] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-03-31 17:28:05,749] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-03-31 17:28:05,761] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-03-31 17:28:05,768] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-03-31 17:28:05,772] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-03-31 17:28:05,774] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-03-31 17:28:05,774] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-31 17:28:05,775] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-03-31 17:28:05,775] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-03-31 17:28:05,778] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-03-31 17:28:05,778] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-03-31 17:28:05,778] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-03-31 17:28:05,779] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-03-31 17:28:05,800] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-03-31 17:28:05,801] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-03-31 17:28:05,810] INFO [RequestSendThread controllerId=0] Controller 0 connected to hackpad:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-03-31 17:28:05,812] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2020-03-31 17:28:05,812] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-03-31 17:28:05,813] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-03-31 17:28:05,822] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2020-03-31 17:28:05,824] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-03-31 17:28:05,829] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 17:28:05,830] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-03-31 17:28:05,831] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-03-31 17:28:05,831] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-03-31 17:28:05,832] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-03-31 17:28:05,878] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-03-31 17:28:10,880] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:28:10,883] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-03-31 17:33:10,885] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:33:10,885] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-03-31 17:37:22,258] INFO [Controller id=0] New topics: [Set(get_Profile)], deleted topics: [Set()], new partition replica assignment [Map(get_Profile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-03-31 17:37:22,261] INFO [Controller id=0] New partition creation callback for get_Profile-0 (kafka.controller.KafkaController)
[2020-03-31 17:37:23,785] INFO [Controller id=0] New topics: [Set(update_Pers)], deleted topics: [Set()], new partition replica assignment [Map(update_Pers-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-03-31 17:37:23,786] INFO [Controller id=0] New partition creation callback for update_Pers-0 (kafka.controller.KafkaController)
[2020-03-31 17:37:25,350] INFO [Controller id=0] New topics: [Set(update_Edu)], deleted topics: [Set()], new partition replica assignment [Map(update_Edu-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-03-31 17:37:25,351] INFO [Controller id=0] New partition creation callback for update_Edu-0 (kafka.controller.KafkaController)
[2020-03-31 17:37:26,843] INFO [Controller id=0] New topics: [Set(insert_Edu)], deleted topics: [Set()], new partition replica assignment [Map(insert_Edu-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-03-31 17:37:26,844] INFO [Controller id=0] New partition creation callback for insert_Edu-0 (kafka.controller.KafkaController)
[2020-03-31 17:37:28,360] INFO [Controller id=0] New topics: [Set(update_Contact)], deleted topics: [Set()], new partition replica assignment [Map(update_Contact-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-03-31 17:37:28,360] INFO [Controller id=0] New partition creation callback for update_Contact-0 (kafka.controller.KafkaController)
[2020-03-31 17:37:29,854] INFO [Controller id=0] New topics: [Set(insert_Exp)], deleted topics: [Set()], new partition replica assignment [Map(insert_Exp-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-03-31 17:37:29,854] INFO [Controller id=0] New partition creation callback for insert_Exp-0 (kafka.controller.KafkaController)
[2020-03-31 17:37:31,387] INFO [Controller id=0] New topics: [Set(update_Exp)], deleted topics: [Set()], new partition replica assignment [Map(update_Exp-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-03-31 17:37:31,387] INFO [Controller id=0] New partition creation callback for update_Exp-0 (kafka.controller.KafkaController)
[2020-03-31 17:37:32,936] INFO [Controller id=0] New topics: [Set(insert_Skill)], deleted topics: [Set()], new partition replica assignment [Map(insert_Skill-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-03-31 17:37:32,936] INFO [Controller id=0] New partition creation callback for insert_Skill-0 (kafka.controller.KafkaController)
[2020-03-31 17:38:10,885] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:38:10,886] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(update_Edu-0 -> Vector(0), update_Pers-0 -> Vector(0), insert_Skill-0 -> Vector(0), update_Exp-0 -> Vector(0), insert_Edu-0 -> Vector(0), update_Contact-0 -> Vector(0), insert_Exp-0 -> Vector(0), get_Profile-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-31 17:38:10,888] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-31 17:38:10,889] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:43:08,847] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:43:08,849] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(update_Edu-0 -> Vector(0), update_Pers-0 -> Vector(0), insert_Skill-0 -> Vector(0), update_Exp-0 -> Vector(0), insert_Edu-0 -> Vector(0), update_Contact-0 -> Vector(0), insert_Exp-0 -> Vector(0), get_Profile-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-31 17:43:08,849] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-31 17:43:08,849] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:48:10,993] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:48:10,995] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(update_Edu-0 -> Vector(0), update_Pers-0 -> Vector(0), insert_Skill-0 -> Vector(0), update_Exp-0 -> Vector(0), insert_Edu-0 -> Vector(0), update_Contact-0 -> Vector(0), insert_Exp-0 -> Vector(0), get_Profile-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-31 17:48:10,996] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-31 17:48:10,996] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:53:10,997] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:53:10,998] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(update_Edu-0 -> Vector(0), update_Pers-0 -> Vector(0), insert_Skill-0 -> Vector(0), update_Exp-0 -> Vector(0), insert_Edu-0 -> Vector(0), update_Contact-0 -> Vector(0), insert_Exp-0 -> Vector(0), get_Profile-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-31 17:53:10,998] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-31 17:53:10,998] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-03-31 17:58:10,999] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-03-31 17:58:10,999] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(update_Edu-0 -> Vector(0), update_Pers-0 -> Vector(0), insert_Skill-0 -> Vector(0), update_Exp-0 -> Vector(0), insert_Edu-0 -> Vector(0), update_Contact-0 -> Vector(0), insert_Exp-0 -> Vector(0), get_Profile-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-03-31 17:58:10,999] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-03-31 17:58:10,999] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
