[2020-04-03 00:43:49,240] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@5d3411d, name=log4j:logger=kafka.controller (kafka.controller)
[2020-04-03 00:44:33,529] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2020-04-03 00:44:33,591] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2020-04-03 00:44:33,592] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2020-04-03 00:44:33,597] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2020-04-03 00:44:33,649] INFO [Controller id=0] Epoch incremented to 1 (kafka.controller.KafkaController)
[2020-04-03 00:44:33,650] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2020-04-03 00:44:33,661] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2020-04-03 00:44:33,669] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2020-04-03 00:44:33,693] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2020-04-03 00:44:33,771] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2020-04-03 00:44:33,788] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2020-04-03 00:44:33,808] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2020-04-03 00:44:33,811] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2020-04-03 00:44:33,812] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2020-04-03 00:44:33,812] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-03 00:44:33,813] INFO [Controller id=0] Current list of topics in the cluster: Set() (kafka.controller.KafkaController)
[2020-04-03 00:44:33,813] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2020-04-03 00:44:33,816] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2020-04-03 00:44:33,817] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2020-04-03 00:44:33,817] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2020-04-03 00:44:33,818] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2020-04-03 00:44:33,833] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2020-04-03 00:44:33,833] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2020-04-03 00:44:33,847] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map() (kafka.controller.ReplicaStateMachine)
[2020-04-03 00:44:33,848] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2020-04-03 00:44:33,848] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2020-04-03 00:44:33,851] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map() (kafka.controller.PartitionStateMachine)
[2020-04-03 00:44:33,865] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2020-04-03 00:44:33,868] INFO [RequestSendThread controllerId=0] Controller 0 connected to hackpad:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2020-04-03 00:44:33,869] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2020-04-03 00:44:33,869] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2020-04-03 00:44:33,870] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2020-04-03 00:44:33,870] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2020-04-03 00:44:33,870] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2020-04-03 00:44:33,923] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2020-04-03 00:44:38,925] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 00:44:38,926] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-03 00:49:38,927] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 00:49:38,928] DEBUG [Controller id=0] Preferred replicas by broker Map() (kafka.controller.KafkaController)
[2020-04-03 00:53:25,591] INFO [Controller id=0] New topics: [Set(get_Profile)], deleted topics: [Set()], new partition replica assignment [Map(get_Profile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:25,592] INFO [Controller id=0] New partition creation callback for get_Profile-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:27,180] INFO [Controller id=0] New topics: [Set(update_Pers)], deleted topics: [Set()], new partition replica assignment [Map(update_Pers-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:27,180] INFO [Controller id=0] New partition creation callback for update_Pers-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:28,798] INFO [Controller id=0] New topics: [Set(update_Edu)], deleted topics: [Set()], new partition replica assignment [Map(update_Edu-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:28,799] INFO [Controller id=0] New partition creation callback for update_Edu-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:30,367] INFO [Controller id=0] New topics: [Set(insert_Edu)], deleted topics: [Set()], new partition replica assignment [Map(insert_Edu-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:30,369] INFO [Controller id=0] New partition creation callback for insert_Edu-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:32,005] INFO [Controller id=0] New topics: [Set(update_Contact)], deleted topics: [Set()], new partition replica assignment [Map(update_Contact-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:32,005] INFO [Controller id=0] New partition creation callback for update_Contact-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:33,546] INFO [Controller id=0] New topics: [Set(insert_Exp)], deleted topics: [Set()], new partition replica assignment [Map(insert_Exp-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:33,546] INFO [Controller id=0] New partition creation callback for insert_Exp-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:35,274] INFO [Controller id=0] New topics: [Set(update_Exp)], deleted topics: [Set()], new partition replica assignment [Map(update_Exp-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:35,274] INFO [Controller id=0] New partition creation callback for update_Exp-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:38,043] INFO [Controller id=0] New topics: [Set(insert_Skill)], deleted topics: [Set()], new partition replica assignment [Map(insert_Skill-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:38,043] INFO [Controller id=0] New partition creation callback for insert_Skill-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:39,879] INFO [Controller id=0] New topics: [Set(update_Comp_Profile)], deleted topics: [Set()], new partition replica assignment [Map(update_Comp_Profile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:39,880] INFO [Controller id=0] New partition creation callback for update_Comp_Profile-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:41,877] INFO [Controller id=0] New topics: [Set(get_All_Jobs)], deleted topics: [Set()], new partition replica assignment [Map(get_All_Jobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:41,877] INFO [Controller id=0] New partition creation callback for get_All_Jobs-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:43,492] INFO [Controller id=0] New topics: [Set(add_Jobs)], deleted topics: [Set()], new partition replica assignment [Map(add_Jobs-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:43,492] INFO [Controller id=0] New partition creation callback for add_Jobs-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:45,098] INFO [Controller id=0] New topics: [Set(response_topic)], deleted topics: [Set()], new partition replica assignment [Map(response_topic-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:45,098] INFO [Controller id=0] New partition creation callback for response_topic-0 (kafka.controller.KafkaController)
[2020-04-03 00:53:46,637] INFO [Controller id=0] New topics: [Set(get_Comp_Profile)], deleted topics: [Set()], new partition replica assignment [Map(get_Comp_Profile-0 -> Vector(0))] (kafka.controller.KafkaController)
[2020-04-03 00:53:46,637] INFO [Controller id=0] New partition creation callback for get_Comp_Profile-0 (kafka.controller.KafkaController)
[2020-04-03 00:54:38,928] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 00:54:38,929] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(update_Comp_Profile-0 -> Vector(0), update_Edu-0 -> Vector(0), get_All_Jobs-0 -> Vector(0), update_Pers-0 -> Vector(0), insert_Skill-0 -> Vector(0), update_Exp-0 -> Vector(0), get_Comp_Profile-0 -> Vector(0), insert_Edu-0 -> Vector(0), update_Contact-0 -> Vector(0), add_Jobs-0 -> Vector(0), insert_Exp-0 -> Vector(0), response_topic-0 -> Vector(0), get_Profile-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-03 00:54:38,932] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-03 00:54:38,933] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2020-04-03 00:59:38,933] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2020-04-03 00:59:38,934] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(update_Comp_Profile-0 -> Vector(0), update_Edu-0 -> Vector(0), get_All_Jobs-0 -> Vector(0), update_Pers-0 -> Vector(0), insert_Skill-0 -> Vector(0), update_Exp-0 -> Vector(0), get_Comp_Profile-0 -> Vector(0), insert_Edu-0 -> Vector(0), update_Contact-0 -> Vector(0), add_Jobs-0 -> Vector(0), insert_Exp-0 -> Vector(0), response_topic-0 -> Vector(0), get_Profile-0 -> Vector(0))) (kafka.controller.KafkaController)
[2020-04-03 00:59:38,934] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2020-04-03 00:59:38,934] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
